#
# Copyright (C) 2015 Naoghuman
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

OpenIDE-Module-Display-Category=JavaFX 8
OpenIDE-Module-Short-Description=The NetBeansIDE-AfterburnerFX-Plugin is a NetBeans IDE plugin which supports the file generation in convention with the library afterburner.fx in a JavaFX project.
OpenIDE-Module-Long-Description=\
    The <b>NetBeansIDE-AfterburnerFX-Plugin</b> is a <i>NetBeans IDE</i> plugin which supports the file generation in <b>convention</b> with the library <i>afterburner.fx</i> in a <i>JavaFX</i> project.\n\
    <br/><br/>\nThe following primary files <i>[FileName].fxml</i>, <i>[FileName]Presenter.java</i>, <i>[FileName]View.java</i> and optional <i>[FileName].css</i> and <i>[FileName].properties</i> can be created in a new wizard. \
    One conditional is that <i>[FileName].toLowerCase()</i> must be <b>equals</b> with the <i>last</i> choosen package name.
OpenIDE-Module-Name=NetBeansIDE-AfterburnerFX-Plugin

LAB_ProjectResources=Project Resources

MSG_ConfigureFXMLPanel_Template_Error=Template must be specified!
PluginVisualPanelSummary.lInfoPrimaryFiles.text=Following primary files will be created:
PluginVisualPanelSummary.lInfoOptionalFiles.text=Following optional files will be created:
PluginVisualPanelPrimaryFiles.lProject.text=Project:
PluginVisualPanelPrimaryFiles.tfProject.text=
PluginVisualPanelPrimaryFiles.lInfoPrimaryFiles.text=Following primary files will be created:
PluginVisualPanelPrimaryFiles.lPackage.text=Package:
PluginVisualPanelPrimaryFiles.lLocation.text=Location:
PluginVisualPanelPrimaryFiles.tfFileName.text=
PluginVisualPanelPrimaryFiles.lFileName.text=Filename:
PluginVisualPanelOptionalFiles.cbShouldPropertiesInjected.text=Inject the created .properties file into the file {0}.fxml.
PluginVisualPanelOptionalFiles.cbShouldCSSinjected.text=Inject the created .css file into the file {0}.fxml.
PluginVisualPanelOptionalFiles.lInfoOptionalFiles.text=Following optional files will be created:
PluginVisualPanelOptionalFiles.cbShouldPropertiesCreated.text=Create an optional resource bundle (.properties) file.
PluginVisualPanelOptionalFiles.cbShouldCSScreated.text=Create an optional cascading style sheet (CSS) document.
PluginVisualPanelPrimaryFiles.tfPackage.text=
PluginVisualPanelPrimaryFiles.tfLocation.text=
PluginVisualPanelPrimaryFiles.cbFxmlToLowerCase.text=.fxml to lowercase
PluginVisualPanelOptionalFiles.cbCSStoLowerCase.text=.css as lowercase
PluginVisualPanelOptionalFiles.cbPropertiesToLowerCase.text=.properties as lowercase
