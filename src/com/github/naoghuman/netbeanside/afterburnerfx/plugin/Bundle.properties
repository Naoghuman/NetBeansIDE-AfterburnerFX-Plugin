#
# Copyright (C) 2015 Naoghuman
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

OpenIDE-Module-Display-Category=JavaFX 8
OpenIDE-Module-Long-Description=\
    NetBeansIDE-AfterburnerFX-Plugin is a NetBeans IDE plugin which support the file generation in convention with the library afterburner.fx in a JavaFX project.\n\n\
    The plugin let allowed the user easily creating following files (BaseName.css, -.fxml, -.properties, -Presenter.java, -View.java) within one wizard.
OpenIDE-Module-Name=NetBeansIDE-AfterburnerFX-Plugin

LAB_ProjectResources=Project Resources

MSG_ConfigureFXMLPanel_Template_Error=Template must be specified!
OpenIDE-Module-Short-Description=NetBeansIDE-AfterburnerFX-Plugin is a NetBeans IDE plugin which support the file generation in convention with the library afterburner.fx in a JavaFX project.
PluginVisualPanelName.tfProject.text=
PluginVisualPanelName.tfBasename.text=
PluginVisualPanelOptional.cbInjectCSS.text=
PluginVisualPanelOptional.cbCreateCSS.text=Create an optional cascading style sheet (CSS) document.
PluginVisualPanelOptional.cbCreateProperties.text=Create an optional resource (.properties) bundle file.
PluginVisualPanelOptional.cbInjectProperties.text=
PluginVisualPanelSummary.lInfoPrimaryFiles.text=Following primary files will be created:
PluginVisualPanelSummary.lInfoOptionalFiles.text=Following optional files will be created:
PluginVisualPanelOptional.taInjectCSSfile.text=If this option is checked, then the created css file will be automatically injected in the file {0}.fxml.
PluginVisualPanelOptional.taInjectPropertiesFile.text=If this option is checked, then the created file will be automatically injected in the file {0}Presenter.java and is there available through the parameter 'resources'.
PluginVisualPanelOptional.lInfoOptionalFiles.text=Following optional files will be created:
PluginVisualPanelName.lBasename.text=Base Name:
PluginVisualPanelName.lProject.text=Project:
PluginVisualPanelName.lLocation.text=Location:
PluginVisualPanelName.lPackage.text=Package:
PluginVisualPanelName.lInfoPrimaryFiles.text=Following primary files will be created:
